# The main entry point of your workflow.
# After configuring, running snakemake -n in a clone of this repository should successfully execute a dry-run of the workflow.
report: "report/workflow.rst"

# Allow users to fix the underlying OS via singularity.
#singularity: "docker://continuumio/miniconda3"
from snakemake.utils import validate
import pandas as pd
import numpy as np
configfile:"config/config.yaml"

metadata = pd.read_csv(config['samples'], sep="\t")
validate(metadata, schema="schemas/samples.schema.yaml")
samples = metadata.samples

# IR allele balance mutations file
mutationdata = pd.read_csv(config['IRmutations']['path'], sep="\t")
mutations = mutationdata.Name[:3]

include: "rules/common.smk"
include: "rules/qc.smk"
include: "rules/diff.smk"
include: "rules/variant_calling.smk"
include: "rules/variant_analysis.smk"

rule all:
    input:
        # The first rule should define the default target files
        # Subsequent target rules can be specified below. They should start with all_*.
#        expand("resources/reads/qc/{sample}_{n}_fastqc.html", sample=samples, n=[1,2]),
        DiffExp = "results/genediff/RNA-Seq_diff.xlsx",
        DiffExpIsoform = "results/isoformdiff/RNA-Seq_isoformdiff.xlsx",
        Coverage = expand("resources/alignments/coverage/{sample}.mosdepth.summary.txt", sample=samples)
        annotatedVCFs = expand("results/variants/vcfs/annot.variants.{chrom}.vcf.gz", chrom=config['chroms']),
        Fst = "results/variants/Fst.tsv",
        diffSNPs = expand("results/variants/diffsnps/{name}.sig.kissDE.tsv", name = config['contrasts']),
        variantPCA = expand("results/variants/plots/PCA-{chrom}-{dataset}.png", chrom=config['chroms'], dataset=config['dataset']),
        AIMs = "results/variants/AIMs/AIMs_summary.tsv" if config['AIMs']['activate'],
        Fullxlsx = "results/RNA-Seq-full.xlsx"


#rule all_lncRNA:
#    input:
#        #"results/transcript_assembly/merged.gtf",
